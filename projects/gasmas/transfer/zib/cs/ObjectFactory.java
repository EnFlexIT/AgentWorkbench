//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.04.01 at 12:38:15 AM MESZ 
//


package gasmas.transfer.zib.cs;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the gasmas.transfer.zib.cs package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Source_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "source");
    private final static QName _Valve_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "valve");
    private final static QName _Mass_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "mass");
    private final static QName _Area_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "area");
    private final static QName _Height_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "height");
    private final static QName _Innode_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "innode");
    private final static QName _CompressorStations_QNAME = new QName("http://ifam.uni-hannover.de/ao/nopt/compressorStation", "compressorStations");
    private final static QName _Velocity_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "velocity");
    private final static QName _Power_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "power");
    private final static QName _LuminousIntensity_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "luminousIntensity");
    private final static QName _Length_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "length");
    private final static QName _Density_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "density");
    private final static QName _ShortPipe_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "shortPipe");
    private final static QName _Temperature_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "temperature");
    private final static QName _Network_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "network");
    private final static QName _Flow_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "flow");
    private final static QName _ElectricalCurrent_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "electricalCurrent");
    private final static QName _Sink_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "sink");
    private final static QName _BoundaryNode_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "boundaryNode");
    private final static QName _CompressorStation_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "compressorStation");
    private final static QName _Unit_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "unit");
    private final static QName _Node_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "node");
    private final static QName _Drive_QNAME = new QName("http://ifam.uni-hannover.de/ao/nopt/compressorStation", "drive");
    private final static QName _Volume_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "volume");
    private final static QName _AmountOfSubstance_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "amountOfSubstance");
    private final static QName _Radius_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "radius");
    private final static QName _Pressure_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "pressure");
    private final static QName _ControlValve_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "controlValve");
    private final static QName _Diameter_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "diameter");
    private final static QName _Connection_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "connection");
    private final static QName _Resistor_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "resistor");
    private final static QName _Pipe_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", "pipe");
    private final static QName _Roughness_QNAME = new QName("http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", "roughness");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: gasmas.transfer.zib.cs
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link FlowType }
     * 
     */
    public FlowType createFlowType() {
        return new FlowType();
    }

    /**
     * Create an instance of {@link MolarMassType }
     * 
     */
    public MolarMassType createMolarMassType() {
        return new MolarMassType();
    }

    /**
     * Create an instance of {@link SourceType }
     * 
     */
    public SourceType createSourceType() {
        return new SourceType();
    }

    /**
     * Create an instance of {@link GasDrivenMotorType.MaximalPowerMeasurements }
     * 
     */
    public GasDrivenMotorType.MaximalPowerMeasurements createGasDrivenMotorTypeMaximalPowerMeasurements() {
        return new GasDrivenMotorType.MaximalPowerMeasurements();
    }

    /**
     * Create an instance of {@link SECMeasurementsType.Measurement.CompressorPower }
     * 
     */
    public SECMeasurementsType.Measurement.CompressorPower createSECMeasurementsTypeMeasurementCompressorPower() {
        return new SECMeasurementsType.Measurement.CompressorPower();
    }

    /**
     * Create an instance of {@link CompressorStationsType.CompressorStation }
     * 
     */
    public CompressorStationsType.CompressorStation createCompressorStationsTypeCompressorStation() {
        return new CompressorStationsType.CompressorStation();
    }

    /**
     * Create an instance of {@link GasTurbineType.MaximalPowerMeasurements.AmbientTemperature }
     * 
     */
    public GasTurbineType.MaximalPowerMeasurements.AmbientTemperature createGasTurbineTypeMaximalPowerMeasurementsAmbientTemperature() {
        return new GasTurbineType.MaximalPowerMeasurements.AmbientTemperature();
    }

    /**
     * Create an instance of {@link ConfigurationType }
     * 
     */
    public ConfigurationType createConfigurationType() {
        return new ConfigurationType();
    }

    /**
     * Create an instance of {@link VelocityType }
     * 
     */
    public VelocityType createVelocityType() {
        return new VelocityType();
    }

    /**
     * Create an instance of {@link CompressorStationsType }
     * 
     */
    public CompressorStationsType createCompressorStationsType() {
        return new CompressorStationsType();
    }

    /**
     * Create an instance of {@link PipeType.Path }
     * 
     */
    public PipeType.Path createPipeTypePath() {
        return new PipeType.Path();
    }

    /**
     * Create an instance of {@link MassType }
     * 
     */
    public MassType createMassType() {
        return new MassType();
    }

    /**
     * Create an instance of {@link ShortPipeType }
     * 
     */
    public ShortPipeType createShortPipeType() {
        return new ShortPipeType();
    }

    /**
     * Create an instance of {@link HeatTransferType }
     * 
     */
    public HeatTransferType createHeatTransferType() {
        return new HeatTransferType();
    }

    /**
     * Create an instance of {@link CompressorType }
     * 
     */
    public CompressorType createCompressorType() {
        return new CompressorType();
    }

    /**
     * Create an instance of {@link LuminousIntensityType }
     * 
     */
    public LuminousIntensityType createLuminousIntensityType() {
        return new LuminousIntensityType();
    }

    /**
     * Create an instance of {@link PowerType }
     * 
     */
    public PowerType createPowerType() {
        return new PowerType();
    }

    /**
     * Create an instance of {@link CalorificValueType }
     * 
     */
    public CalorificValueType createCalorificValueType() {
        return new CalorificValueType();
    }

    /**
     * Create an instance of {@link SECMeasurementsType }
     * 
     */
    public SECMeasurementsType createSECMeasurementsType() {
        return new SECMeasurementsType();
    }

    /**
     * Create an instance of {@link ConnectionsType }
     * 
     */
    public ConnectionsType createConnectionsType() {
        return new ConnectionsType();
    }

    /**
     * Create an instance of {@link CompressorStationsType.CompressorStation.Drives }
     * 
     */
    public CompressorStationsType.CompressorStation.Drives createCompressorStationsTypeCompressorStationDrives() {
        return new CompressorStationsType.CompressorStation.Drives();
    }

    /**
     * Create an instance of {@link TurboCompressorType }
     * 
     */
    public TurboCompressorType createTurboCompressorType() {
        return new TurboCompressorType();
    }

    /**
     * Create an instance of {@link AreaType }
     * 
     */
    public AreaType createAreaType() {
        return new AreaType();
    }

    /**
     * Create an instance of {@link SECMeasurementsType.Measurement.FuelConsumption }
     * 
     */
    public SECMeasurementsType.Measurement.FuelConsumption createSECMeasurementsTypeMeasurementFuelConsumption() {
        return new SECMeasurementsType.Measurement.FuelConsumption();
    }

    /**
     * Create an instance of {@link NetworkType }
     * 
     */
    public NetworkType createNetworkType() {
        return new NetworkType();
    }

    /**
     * Create an instance of {@link DensityType }
     * 
     */
    public DensityType createDensityType() {
        return new DensityType();
    }

    /**
     * Create an instance of {@link ControlValveType }
     * 
     */
    public ControlValveType createControlValveType() {
        return new ControlValveType();
    }

    /**
     * Create an instance of {@link TorqueType }
     * 
     */
    public TorqueType createTorqueType() {
        return new TorqueType();
    }

    /**
     * Create an instance of {@link SpeedType }
     * 
     */
    public SpeedType createSpeedType() {
        return new SpeedType();
    }

    /**
     * Create an instance of {@link TurboCompressorType.CharacteristicDiagramMeasurements }
     * 
     */
    public TurboCompressorType.CharacteristicDiagramMeasurements createTurboCompressorTypeCharacteristicDiagramMeasurements() {
        return new TurboCompressorType.CharacteristicDiagramMeasurements();
    }

    /**
     * Create an instance of {@link ElectricMotorType.MaximalPowerMeasurements.AmbientTemperature }
     * 
     */
    public ElectricMotorType.MaximalPowerMeasurements.AmbientTemperature createElectricMotorTypeMaximalPowerMeasurementsAmbientTemperature() {
        return new ElectricMotorType.MaximalPowerMeasurements.AmbientTemperature();
    }

    /**
     * Create an instance of {@link BoundaryNodeType }
     * 
     */
    public BoundaryNodeType createBoundaryNodeType() {
        return new BoundaryNodeType();
    }

    /**
     * Create an instance of {@link TcMeasurementType.VolumetricFlowrate }
     * 
     */
    public TcMeasurementType.VolumetricFlowrate createTcMeasurementTypeVolumetricFlowrate() {
        return new TcMeasurementType.VolumetricFlowrate();
    }

    /**
     * Create an instance of {@link UnitType }
     * 
     */
    public UnitType createUnitType() {
        return new UnitType();
    }

    /**
     * Create an instance of {@link TimeType }
     * 
     */
    public TimeType createTimeType() {
        return new TimeType();
    }

    /**
     * Create an instance of {@link MpMeasurementType.MaximalPower }
     * 
     */
    public MpMeasurementType.MaximalPower createMpMeasurementTypeMaximalPower() {
        return new MpMeasurementType.MaximalPower();
    }

    /**
     * Create an instance of {@link DriveType }
     * 
     */
    public DriveType createDriveType() {
        return new DriveType();
    }

    /**
     * Create an instance of {@link TcMeasurementType.AdiabaticHead }
     * 
     */
    public TcMeasurementType.AdiabaticHead createTcMeasurementTypeAdiabaticHead() {
        return new TcMeasurementType.AdiabaticHead();
    }

    /**
     * Create an instance of {@link CompressorStationType }
     * 
     */
    public CompressorStationType createCompressorStationType() {
        return new CompressorStationType();
    }

    /**
     * Create an instance of {@link StateType }
     * 
     */
    public StateType createStateType() {
        return new StateType();
    }

    /**
     * Create an instance of {@link TurboCompressorType.SettlelineMeasurements }
     * 
     */
    public TurboCompressorType.SettlelineMeasurements createTurboCompressorTypeSettlelineMeasurements() {
        return new TurboCompressorType.SettlelineMeasurements();
    }

    /**
     * Create an instance of {@link ElectricalCurrentType }
     * 
     */
    public ElectricalCurrentType createElectricalCurrentType() {
        return new ElectricalCurrentType();
    }

    /**
     * Create an instance of {@link NoType }
     * 
     */
    public NoType createNoType() {
        return new NoType();
    }

    /**
     * Create an instance of {@link ConfigurationType.Stage.Compressor }
     * 
     */
    public ConfigurationType.Stage.Compressor createConfigurationTypeStageCompressor() {
        return new ConfigurationType.Stage.Compressor();
    }

    /**
     * Create an instance of {@link GasNodeType }
     * 
     */
    public GasNodeType createGasNodeType() {
        return new GasNodeType();
    }

    /**
     * Create an instance of {@link PipeType.Path.Node }
     * 
     */
    public PipeType.Path.Node createPipeTypePathNode() {
        return new PipeType.Path.Node();
    }

    /**
     * Create an instance of {@link SteamTurbineType }
     * 
     */
    public SteamTurbineType createSteamTurbineType() {
        return new SteamTurbineType();
    }

    /**
     * Create an instance of {@link ElectricMotorType.MaximalPowerMeasurements }
     * 
     */
    public ElectricMotorType.MaximalPowerMeasurements createElectricMotorTypeMaximalPowerMeasurements() {
        return new ElectricMotorType.MaximalPowerMeasurements();
    }

    /**
     * Create an instance of {@link NodeType }
     * 
     */
    public NodeType createNodeType() {
        return new NodeType();
    }

    /**
     * Create an instance of {@link ResistorType }
     * 
     */
    public ResistorType createResistorType() {
        return new ResistorType();
    }

    /**
     * Create an instance of {@link TcMeasurementType }
     * 
     */
    public TcMeasurementType createTcMeasurementType() {
        return new TcMeasurementType();
    }

    /**
     * Create an instance of {@link ConnectionType }
     * 
     */
    public ConnectionType createConnectionType() {
        return new ConnectionType();
    }

    /**
     * Create an instance of {@link SinkType }
     * 
     */
    public SinkType createSinkType() {
        return new SinkType();
    }

    /**
     * Create an instance of {@link SECMeasurementsType.Measurement }
     * 
     */
    public SECMeasurementsType.Measurement createSECMeasurementsTypeMeasurement() {
        return new SECMeasurementsType.Measurement();
    }

    /**
     * Create an instance of {@link TurboCompressorType.CharacteristicDiagramMeasurements.AdiabaticEfficiency }
     * 
     */
    public TurboCompressorType.CharacteristicDiagramMeasurements.AdiabaticEfficiency createTurboCompressorTypeCharacteristicDiagramMeasurementsAdiabaticEfficiency() {
        return new TurboCompressorType.CharacteristicDiagramMeasurements.AdiabaticEfficiency();
    }

    /**
     * Create an instance of {@link MpMeasurementType }
     * 
     */
    public MpMeasurementType createMpMeasurementType() {
        return new MpMeasurementType();
    }

    /**
     * Create an instance of {@link LengthType }
     * 
     */
    public LengthType createLengthType() {
        return new LengthType();
    }

    /**
     * Create an instance of {@link InnodeType }
     * 
     */
    public InnodeType createInnodeType() {
        return new InnodeType();
    }

    /**
     * Create an instance of {@link PistonCompressorType }
     * 
     */
    public PistonCompressorType createPistonCompressorType() {
        return new PistonCompressorType();
    }

    /**
     * Create an instance of {@link InformationType }
     * 
     */
    public InformationType createInformationType() {
        return new InformationType();
    }

    /**
     * Create an instance of {@link CompressorStationsType.CompressorStation.Compressors }
     * 
     */
    public CompressorStationsType.CompressorStation.Compressors createCompressorStationsTypeCompressorStationCompressors() {
        return new CompressorStationsType.CompressorStation.Compressors();
    }

    /**
     * Create an instance of {@link CompressorSpeedType }
     * 
     */
    public CompressorSpeedType createCompressorSpeedType() {
        return new CompressorSpeedType();
    }

    /**
     * Create an instance of {@link PressureType }
     * 
     */
    public PressureType createPressureType() {
        return new PressureType();
    }

    /**
     * Create an instance of {@link ElectricMotorType }
     * 
     */
    public ElectricMotorType createElectricMotorType() {
        return new ElectricMotorType();
    }

    /**
     * Create an instance of {@link GasDrivenMotorType }
     * 
     */
    public GasDrivenMotorType createGasDrivenMotorType() {
        return new GasDrivenMotorType();
    }

    /**
     * Create an instance of {@link ConfigurationType.Stage }
     * 
     */
    public ConfigurationType.Stage createConfigurationTypeStage() {
        return new ConfigurationType.Stage();
    }

    /**
     * Create an instance of {@link VolumeType }
     * 
     */
    public VolumeType createVolumeType() {
        return new VolumeType();
    }

    /**
     * Create an instance of {@link ValveType }
     * 
     */
    public ValveType createValveType() {
        return new ValveType();
    }

    /**
     * Create an instance of {@link CompressorStationsType.CompressorStation.Configurations }
     * 
     */
    public CompressorStationsType.CompressorStation.Configurations createCompressorStationsTypeCompressorStationConfigurations() {
        return new CompressorStationsType.CompressorStation.Configurations();
    }

    /**
     * Create an instance of {@link GasTurbineType.MaximalPowerMeasurements }
     * 
     */
    public GasTurbineType.MaximalPowerMeasurements createGasTurbineTypeMaximalPowerMeasurements() {
        return new GasTurbineType.MaximalPowerMeasurements();
    }

    /**
     * Create an instance of {@link AmountOfSubstanceType }
     * 
     */
    public AmountOfSubstanceType createAmountOfSubstanceType() {
        return new AmountOfSubstanceType();
    }

    /**
     * Create an instance of {@link EfficiencyType }
     * 
     */
    public EfficiencyType createEfficiencyType() {
        return new EfficiencyType();
    }

    /**
     * Create an instance of {@link SpecificFuelConsumptionType }
     * 
     */
    public SpecificFuelConsumptionType createSpecificFuelConsumptionType() {
        return new SpecificFuelConsumptionType();
    }

    /**
     * Create an instance of {@link PipeType }
     * 
     */
    public PipeType createPipeType() {
        return new PipeType();
    }

    /**
     * Create an instance of {@link GasTurbineType }
     * 
     */
    public GasTurbineType createGasTurbineType() {
        return new GasTurbineType();
    }

    /**
     * Create an instance of {@link NodesType }
     * 
     */
    public NodesType createNodesType() {
        return new NodesType();
    }

    /**
     * Create an instance of {@link GasConnectionType }
     * 
     */
    public GasConnectionType createGasConnectionType() {
        return new GasConnectionType();
    }

    /**
     * Create an instance of {@link TemperatureType }
     * 
     */
    public TemperatureType createTemperatureType() {
        return new TemperatureType();
    }

    /**
     * Create an instance of {@link GasNetworkType }
     * 
     */
    public GasNetworkType createGasNetworkType() {
        return new GasNetworkType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SourceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "source", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "boundaryNode")
    public JAXBElement<SourceType> createSource(SourceType value) {
        return new JAXBElement<SourceType>(_Source_QNAME, SourceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ValveType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "valve", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "connection")
    public JAXBElement<ValveType> createValve(ValveType value) {
        return new JAXBElement<ValveType>(_Valve_QNAME, ValveType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MassType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "mass", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<MassType> createMass(MassType value) {
        return new JAXBElement<MassType>(_Mass_QNAME, MassType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AreaType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "area", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<AreaType> createArea(AreaType value) {
        return new JAXBElement<AreaType>(_Area_QNAME, AreaType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "height", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<LengthType> createHeight(LengthType value) {
        return new JAXBElement<LengthType>(_Height_QNAME, LengthType.class, null, value);
    }

    /**
     * Create an instance of {@link GasNode }}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "node", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "node")
    public GasNode createGasNode(GasNodeType value) {
        return new GasNode(value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InnodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "innode", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "node")
    public JAXBElement<InnodeType> createInnode(InnodeType value) {
        return new JAXBElement<InnodeType>(_Innode_QNAME, InnodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompressorStationsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ifam.uni-hannover.de/ao/nopt/compressorStation", name = "compressorStations")
    public JAXBElement<CompressorStationsType> createCompressorStations(CompressorStationsType value) {
        return new JAXBElement<CompressorStationsType>(_CompressorStations_QNAME, CompressorStationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VelocityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "velocity", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<VelocityType> createVelocity(VelocityType value) {
        return new JAXBElement<VelocityType>(_Velocity_QNAME, VelocityType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PowerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "power", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<PowerType> createPower(PowerType value) {
        return new JAXBElement<PowerType>(_Power_QNAME, PowerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LuminousIntensityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "luminousIntensity", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<LuminousIntensityType> createLuminousIntensity(LuminousIntensityType value) {
        return new JAXBElement<LuminousIntensityType>(_LuminousIntensity_QNAME, LuminousIntensityType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "length", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<LengthType> createLength(LengthType value) {
        return new JAXBElement<LengthType>(_Length_QNAME, LengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DensityType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "density", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<DensityType> createDensity(DensityType value) {
        return new JAXBElement<DensityType>(_Density_QNAME, DensityType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShortPipeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "shortPipe", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "connection")
    public JAXBElement<ShortPipeType> createShortPipe(ShortPipeType value) {
        return new JAXBElement<ShortPipeType>(_ShortPipe_QNAME, ShortPipeType.class, null, value);
    }

    /**
     * Create an instance of {@link GasConnection }}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "connection", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "connection")
    public GasConnection createGasConnection(GasConnectionType value) {
        return new GasConnection(value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TemperatureType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "temperature", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<TemperatureType> createTemperature(TemperatureType value) {
        return new JAXBElement<TemperatureType>(_Temperature_QNAME, TemperatureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NetworkType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "network")
    public JAXBElement<NetworkType> createNetwork(NetworkType value) {
        return new JAXBElement<NetworkType>(_Network_QNAME, NetworkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FlowType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "flow", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<FlowType> createFlow(FlowType value) {
        return new JAXBElement<FlowType>(_Flow_QNAME, FlowType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElectricalCurrentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "electricalCurrent", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<ElectricalCurrentType> createElectricalCurrent(ElectricalCurrentType value) {
        return new JAXBElement<ElectricalCurrentType>(_ElectricalCurrent_QNAME, ElectricalCurrentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SinkType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "sink", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "boundaryNode")
    public JAXBElement<SinkType> createSink(SinkType value) {
        return new JAXBElement<SinkType>(_Sink_QNAME, SinkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BoundaryNodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "boundaryNode", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "node")
    public JAXBElement<BoundaryNodeType> createBoundaryNode(BoundaryNodeType value) {
        return new JAXBElement<BoundaryNodeType>(_BoundaryNode_QNAME, BoundaryNodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompressorStationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "compressorStation", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "connection")
    public JAXBElement<CompressorStationType> createCompressorStation(CompressorStationType value) {
        return new JAXBElement<CompressorStationType>(_CompressorStation_QNAME, CompressorStationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UnitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "unit")
    public JAXBElement<UnitType> createUnit(UnitType value) {
        return new JAXBElement<UnitType>(_Unit_QNAME, UnitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "node")
    public JAXBElement<NodeType> createNode(NodeType value) {
        return new JAXBElement<NodeType>(_Node_QNAME, NodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DriveType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ifam.uni-hannover.de/ao/nopt/compressorStation", name = "drive")
    public JAXBElement<DriveType> createDrive(DriveType value) {
        return new JAXBElement<DriveType>(_Drive_QNAME, DriveType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VolumeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "volume", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<VolumeType> createVolume(VolumeType value) {
        return new JAXBElement<VolumeType>(_Volume_QNAME, VolumeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AmountOfSubstanceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "amountOfSubstance", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<AmountOfSubstanceType> createAmountOfSubstance(AmountOfSubstanceType value) {
        return new JAXBElement<AmountOfSubstanceType>(_AmountOfSubstance_QNAME, AmountOfSubstanceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "radius", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<LengthType> createRadius(LengthType value) {
        return new JAXBElement<LengthType>(_Radius_QNAME, LengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PressureType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "pressure", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<PressureType> createPressure(PressureType value) {
        return new JAXBElement<PressureType>(_Pressure_QNAME, PressureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControlValveType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "controlValve", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "connection")
    public JAXBElement<ControlValveType> createControlValve(ControlValveType value) {
        return new JAXBElement<ControlValveType>(_ControlValve_QNAME, ControlValveType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "diameter", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<LengthType> createDiameter(LengthType value) {
        return new JAXBElement<LengthType>(_Diameter_QNAME, LengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConnectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "connection")
    public JAXBElement<ConnectionType> createConnection(ConnectionType value) {
        return new JAXBElement<ConnectionType>(_Connection_QNAME, ConnectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ResistorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "resistor", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "connection")
    public JAXBElement<ResistorType> createResistor(ResistorType value) {
        return new JAXBElement<ResistorType>(_Resistor_QNAME, ResistorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PipeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "pipe", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", substitutionHeadName = "connection")
    public JAXBElement<PipeType> createPipe(PipeType value) {
        return new JAXBElement<PipeType>(_Pipe_QNAME, PipeType.class, null, value);
    }

    /**
     * Create an instance of {@link GasNetwork }}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/gas/XMLSchema", name = "network", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "network")
    public GasNetwork createGasNetwork(GasNetworkType value) {
        return new GasNetwork(value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", name = "roughness", substitutionHeadNamespace = "http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema", substitutionHeadName = "unit")
    public JAXBElement<LengthType> createRoughness(LengthType value) {
        return new JAXBElement<LengthType>(_Roughness_QNAME, LengthType.class, null, value);
    }

}
