<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     20.01.2011 12:00:00                                                        

     project:		Agent.GUI
     description	Build the executable version of Agent.GUI, which can
     				be used as an library for other projects.
     				The executable version will be packed to the 
     				folder '\exec\AgentGUI'	
                   
     Christian Derksen                                                                
     ====================================================================== -->
<project name="AgentGui" default="execute" basedir=".">

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
          properties: Wichtige Verzeichniseinstellungen                      
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<property name="sourceDir" value="src" />
	<property name="sourceDirLibraries" value="lib" />
	<property name="sourceDirProperties" value="properties" />
	<property name="sourceDirImages" value="src\agentgui\core\gui\img" />
	<property name="sourceFileProjectOntology" value="src\agentgui\core\ontologies\AgentGUIProjectOntology.txt" />
	
	<property name="binaryDir" value="bin" />
	<property name="binaryDirANT" value="build" />
	<property name="binaryDirIMG" value="build\agentgui\core\gui\img" />
	<property name="binaryFileProjectOntology" value="build\agentgui\core\ontologies\AgentGUIProjectOntology.txt" />
	
	<property name="simServiceSourceDir" value="${binaryDirANT}\agentgui\simulationService\\" />
	<property name="simServiceDestinDir" value="lib\jade\lib\\" />
	<property name="simServiceDestinJar" value="${simServiceDestinDir}\simulation.jar" />
	
	<property name="visServiceSourceDir" value="${binaryDirANT}\agentgui\physical2Denvironment\\" />
	<property name="visServiceDestinDir" value="lib\jade\lib\\" />
	<property name="visServiceDestinJar" value="${simServiceDestinDir}\visualization.jar" />

	<property name="destinDir" value="exec\AgentGUI\\" />
	<property name="destinJar" value="${destinDir}\AgentGui.jar" />		
	<property name="destinDirLibraries" value="${destinDir}\lib\\" />
	<property name="destinDirProperties" value="${destinDir}\properties\\" />
	<property name="destinDirProjects" value="${destinDir}\projects\\" />
	
	<!-- Jar's für den Class-Path im Manifest  -->
	<property name="destinClassPath" 
		     value="lib/batik/batik-rasterizer.jar
					lib/jade/lib/jade.jar
					lib/jade/lib/migration.jar
					lib/jade/lib/XMLCodec.jar
					lib/jade/lib/commons-codec/commons-codec-1.3.jar
					lib/scimark2lib.jar
					lib/google-api-translate-java-0.92.jar
					lib/jdbc/mysql-connector-java-3.0.17-ga-bin.jar
					lib/batik/batik-slideshow.jar
					lib/batik/batik-squiggle.jar
					lib/batik/batik-svgpp.jar
					lib/batik/batik-ttf2svg.jar
					lib/batik/batik.jar
		
					lib/batik/lib/xercesImpl-2.7.1.jar
					lib/jung/collections-generic-4.01.jar
					lib/jung/colt-1.2.0.jar
					lib/jung/concurrent-1.3.4.jar
					lib/jung/jung-algorithms-2.0.1.jar
					lib/jung/jung-api-2.0.1.jar
					lib/jung/jung-graph-impl-2.0.1.jar
					lib/jung/jung-io-2.0.1.jar
					lib/jung/jung-jai-2.0.1.jar
					lib/jung/jung-samples-2.0.1.jar
					lib/jung/jung-visualization-2.0.1.jar
					lib/jung/stax-api-1.0.1.jar
					lib/jung/vecmath-1.3.1.jar
					lib/jung/wstx-asl-3.2.6.jar
					lib/jep-2.3.1/jep-2.3.1.jar
		
					lib/hyperic-sigar/sigar-bin/lib/junit.jar 
					lib/hyperic-sigar/sigar-bin/lib/log4j.jar 
					lib/hyperic-sigar/sigar-bin/lib/sigar.jar  " />
	
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
          target: cleanup => Aufräumen, bevor es wirklich los geht                      
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <target name="cleanup" description="Löschen der alten Datei- und Verzeichnisstruktur ...">
    	<delete failonerror="false" dir="${binaryDirANT}" />    	    	
    </target>
	
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
          target: createdir => Anlegen der Verzeichnisstruktur                      
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <target name="createdir" description="Erstellung der Verzeichnisstruktur ...">
    	<mkdir dir="${destinDir}" />  	
    	<mkdir dir="${destinDirLibraries}" />
    	<mkdir dir="${destinDirProperties}" />
    	<mkdir dir="${destinDirProjects}" />
    </target>
	
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
          target: compile => Anlegen der Verzeichnisstruktur                      
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <target name="compile" description="Erzeugung des Byte-Codes ...">
    	
    	<delete failonerror="false" dir="${binaryDirANT}" />
    	<mkdir dir="${binaryDirANT}" />    	
    	
    	<path id="class.path">
    	  <fileset dir="lib">
    	    <include name="**/*.jar" />
    	  </fileset>
    	</path>

    	<echo message="Compile: Java-Version ${ant.java.version}" />
    	<javac destdir="${binaryDirANT}" encoding="iso-8859-1">    		
    		<src path="${sourceDir}" />
    		<classpath refid="class.path" />
    	</javac>

    	<copy todir="${binaryDirIMG}">
    		<fileset dir="${sourceDirImages}" />
    	</copy>  
    	<copy tofile="${binaryFileProjectOntology}" file="${sourceFileProjectOntology}" />
    		
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
          target: supply => .jar-externe Dateien' verschieben
          				 => Erzeugung der ausführbaren Struktur              
         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <target name="supply" description="Erstellung der Dateistruktur ... ">
    	
    	<!-- Alte simulation.jar löschen -->
    	<delete failonerror="false" file="${simServiceDestinJar}" />    	
    	<!-- Erzeugen der lokalen Datei simulation.jar -->
    	<jar compress="true" destfile="${simServiceDestinJar}" >
 			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
 				<attribute name="Built-Lang" value="${user.language}"/>
			</manifest>    		
    		<fileset dir="${binaryDirANT}">
    			<include name="**/agentgui/simulationService/**"/>
    		</fileset>    		
        </jar>
    	
    	<!-- Alte visualization.jar löschen -->
    	<delete failonerror="false" file="${visServiceDestinJar}" />    	
    	<!-- Erzeugen der lokalen Datei visualization.jar -->
    	<jar compress="true" destfile="${visServiceDestinJar}" >
 			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
 				<attribute name="Built-Lang" value="${user.language}"/>
			</manifest>    		
    		<fileset dir="${binaryDirANT}">
    			<include name="**/agentgui/physical2Denvironment/**"/>
    			<include name="**/agentgui/graphEnvironment/**"/>
    		</fileset>    		
        </jar>
    			
    	<!-- Kopieren der Property-Files -->    	
    	<copy todir="${destinDirProperties}">
    		<fileset dir="${sourceDirProperties}" />
		</copy>   	
    	
    	<!-- Kopieren der Library-Files -->    	
    	<copy todir="${destinDirLibraries}">
    		<fileset dir="${sourceDirLibraries}" />
		</copy>   	
    	
    	<!-- Erzeugen der ausführbaren Java-Datei -->
    	<jar compress="true" destfile="${destinJar}">
 			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
 				<attribute name="Built-Lang" value="${user.language}"/>
    		    <attribute name="Main-Class" value="agentgui.core.application.Application"/>
 				<attribute name="Class-Path" value="${destinClassPath}"/> 				
			</manifest>    		
    		<fileset dir="${binaryDirANT}">
    			<!-- <exclude name="**/mas/projects/**" /> -->    			
    		</fileset>    		
        </jar>
    	
    </target>

	<target name="execute" depends="cleanup,createdir,compile,supply" description="Executing jar-file ... ">
	    <!-- Die erzeugte jar ausführen -->
		<java jar="${destinJar}" fork="true" />
	</target>
	
</project>
