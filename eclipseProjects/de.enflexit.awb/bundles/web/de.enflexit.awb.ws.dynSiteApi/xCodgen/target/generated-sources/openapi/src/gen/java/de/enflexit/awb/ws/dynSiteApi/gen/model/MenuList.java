/*
 * EnFlex.IT - Dynamic Content Api
 * This is the Definition of the Api to dynamically fetch content for any enflex.it application
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: admin@enflex.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.enflexit.awb.ws.dynSiteApi.gen.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import de.enflexit.awb.ws.dynSiteApi.gen.model.MenuItem;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * MenuList
 */
@JsonPropertyOrder({
  MenuList.JSON_PROPERTY_MENU_LIST
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2025-07-18T08:19:40.518876+02:00[Europe/Berlin]", comments = "Generator version: 7.6.0")
public class MenuList   {
  public static final String JSON_PROPERTY_MENU_LIST = "menuList";
  @JsonProperty(JSON_PROPERTY_MENU_LIST)
  private List<@Valid MenuItem> menuList = new ArrayList<>();

  public MenuList menuList(List<@Valid MenuItem> menuList) {
    this.menuList = menuList;
    return this;
  }

  public MenuList addMenuListItem(MenuItem menuListItem) {
    if (this.menuList == null) {
      this.menuList = new ArrayList<>();
    }
    this.menuList.add(menuListItem);
    return this;
  }

  /**
   * Get menuList
   * @return menuList
   **/
  @JsonProperty(value = "menuList")
  @Schema(description = "")
  @Valid 
  public List<@Valid MenuItem> getMenuList() {
    return menuList;
  }

  public void setMenuList(List<@Valid MenuItem> menuList) {
    this.menuList = menuList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MenuList menuList = (MenuList) o;
    return Objects.equals(this.menuList, menuList.menuList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(menuList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MenuList {\n");
    
    sb.append("    menuList: ").append(toIndentedString(menuList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

