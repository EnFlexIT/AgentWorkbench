/*
 * EnFlex.IT - Dynamic Content Api
 * This is the Definition of the Api to dynamically fetch content for any enflex.it application
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: admin@enflex.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.enflexit.awb.ws.dynSiteApi.gen.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import de.enflexit.awb.ws.dynSiteApi.gen.model.AbstractValuePair;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * DataSeries
 */
@JsonPropertyOrder({
  DataSeries.JSON_PROPERTY_LABEL,
  DataSeries.JSON_PROPERTY_SECONDARY_Y_AXIS,
  DataSeries.JSON_PROPERTY_ENTRIES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2025-07-18T09:11:14.660026+02:00[Europe/Berlin]", comments = "Generator version: 7.6.0")
public class DataSeries   {
  public static final String JSON_PROPERTY_LABEL = "label";
  @JsonProperty(JSON_PROPERTY_LABEL)
  private String label;

  public static final String JSON_PROPERTY_SECONDARY_Y_AXIS = "secondaryYAxis";
  @JsonProperty(JSON_PROPERTY_SECONDARY_Y_AXIS)
  private Boolean secondaryYAxis = false;

  public static final String JSON_PROPERTY_ENTRIES = "entries";
  @JsonProperty(JSON_PROPERTY_ENTRIES)
  private List<@Valid AbstractValuePair> entries = new ArrayList<>();

  public DataSeries label(String label) {
    this.label = label;
    return this;
  }

  /**
   * Get label
   * @return label
   **/
  @JsonProperty(value = "label")
  @Schema(required = true, description = "")
  @NotNull 
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public DataSeries secondaryYAxis(Boolean secondaryYAxis) {
    this.secondaryYAxis = secondaryYAxis;
    return this;
  }

  /**
   * Get secondaryYAxis
   * @return secondaryYAxis
   **/
  @JsonProperty(value = "secondaryYAxis")
  @Schema(description = "")
  
  public Boolean getSecondaryYAxis() {
    return secondaryYAxis;
  }

  public void setSecondaryYAxis(Boolean secondaryYAxis) {
    this.secondaryYAxis = secondaryYAxis;
  }

  public DataSeries entries(List<@Valid AbstractValuePair> entries) {
    this.entries = entries;
    return this;
  }

  public DataSeries addEntriesItem(AbstractValuePair entriesItem) {
    if (this.entries == null) {
      this.entries = new ArrayList<>();
    }
    this.entries.add(entriesItem);
    return this;
  }

  /**
   * Get entries
   * @return entries
   **/
  @JsonProperty(value = "entries")
  @Schema(required = true, description = "")
  @NotNull @Valid 
  public List<@Valid AbstractValuePair> getEntries() {
    return entries;
  }

  public void setEntries(List<@Valid AbstractValuePair> entries) {
    this.entries = entries;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataSeries dataSeries = (DataSeries) o;
    return Objects.equals(this.label, dataSeries.label) &&
        Objects.equals(this.secondaryYAxis, dataSeries.secondaryYAxis) &&
        Objects.equals(this.entries, dataSeries.entries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(label, secondaryYAxis, entries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataSeries {\n");
    
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    secondaryYAxis: ").append(toIndentedString(secondaryYAxis)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

