/*
 * EnFlex.IT - Dynamic Content Api
 * This is the Definition of the Api to dynamically fetch content for any enflex.it application
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: admin@enflex.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.enflexit.awb.ws.dynSiteApi.gen.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import de.enflexit.awb.ws.dynSiteApi.gen.model.AbstractSiteContentChart;
import de.enflexit.awb.ws.dynSiteApi.gen.model.DataSeries;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * SiteContentBarChart
 */
@JsonPropertyOrder({
  SiteContentBarChart.JSON_PROPERTY_X_AXIS_LABEL,
  SiteContentBarChart.JSON_PROPERTY_Y_AXIS_LABEL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2025-07-13T19:06:46.391675500+02:00[Europe/Berlin]", comments = "Generator version: 7.6.0")
public class SiteContentBarChart extends AbstractSiteContentChart  {
  public static final String JSON_PROPERTY_X_AXIS_LABEL = "xAxisLabel";
  @JsonProperty(JSON_PROPERTY_X_AXIS_LABEL)
  private String xAxisLabel;

  public static final String JSON_PROPERTY_Y_AXIS_LABEL = "yAxisLabel";
  @JsonProperty(JSON_PROPERTY_Y_AXIS_LABEL)
  private String yAxisLabel;

  public SiteContentBarChart xAxisLabel(String xAxisLabel) {
    this.xAxisLabel = xAxisLabel;
    return this;
  }

  /**
   * Get xAxisLabel
   * @return xAxisLabel
   **/
  @JsonProperty(value = "xAxisLabel")
  @Schema(required = true, description = "")
  @NotNull 
  public String getxAxisLabel() {
    return xAxisLabel;
  }

  public void setxAxisLabel(String xAxisLabel) {
    this.xAxisLabel = xAxisLabel;
  }

  public SiteContentBarChart yAxisLabel(String yAxisLabel) {
    this.yAxisLabel = yAxisLabel;
    return this;
  }

  /**
   * Get yAxisLabel
   * @return yAxisLabel
   **/
  @JsonProperty(value = "yAxisLabel")
  @Schema(required = true, description = "")
  @NotNull 
  public String getyAxisLabel() {
    return yAxisLabel;
  }

  public void setyAxisLabel(String yAxisLabel) {
    this.yAxisLabel = yAxisLabel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SiteContentBarChart siteContentBarChart = (SiteContentBarChart) o;
    return super.equals(o) && Objects.equals(this.xAxisLabel, siteContentBarChart.xAxisLabel) &&
        Objects.equals(this.yAxisLabel, siteContentBarChart.yAxisLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(super.hashCode(), xAxisLabel, super.hashCode(), yAxisLabel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SiteContentBarChart {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    xAxisLabel: ").append(toIndentedString(xAxisLabel)).append("\n");
    sb.append("    yAxisLabel: ").append(toIndentedString(yAxisLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

