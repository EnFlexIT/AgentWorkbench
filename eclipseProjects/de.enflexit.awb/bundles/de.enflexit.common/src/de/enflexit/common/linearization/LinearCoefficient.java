//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.12.05 at 09:28:32 AM CET 
//


package de.enflexit.common.linearization;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 			Describes a single coefficient for a LinearFormula.
 * 			
 * 
 * <p>Java class for LinearCoefficient complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="LinearCoefficient"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="VariableID" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="Value" type="{http://www.w3.org/2001/XMLSchema}double"/&gt;
 *         &lt;element name="ValidFrom" type="{http://www.w3.org/2001/XMLSchema}double"/&gt;
 *         &lt;element name="ValidTo" type="{http://www.w3.org/2001/XMLSchema}double"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "LinearCoefficient", propOrder = {
    "variableID",
    "value",
    "validFrom",
    "validTo"
})
public class LinearCoefficient
    implements Serializable
{

    private final static long serialVersionUID = 201404191434L;
    @XmlElement(name = "VariableID", required = true)
    protected String variableID;
    @XmlElement(name = "Value")
    protected double value;
    @XmlElement(name = "ValidFrom")
    protected double validFrom;
    @XmlElement(name = "ValidTo")
    protected double validTo;

    /**
     * Gets the value of the variableID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVariableID() {
        return variableID;
    }

    /**
     * Sets the value of the variableID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVariableID(String value) {
        this.variableID = value;
    }

    /**
     * Gets the value of the value property.
     * 
     */
    public double getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     */
    public void setValue(double value) {
        this.value = value;
    }

    /**
     * Gets the value of the validFrom property.
     * 
     */
    public double getValidFrom() {
        return validFrom;
    }

    /**
     * Sets the value of the validFrom property.
     * 
     */
    public void setValidFrom(double value) {
        this.validFrom = value;
    }

    /**
     * Gets the value of the validTo property.
     * 
     */
    public double getValidTo() {
        return validTo;
    }

    /**
     * Sets the value of the validTo property.
     * 
     */
    public void setValidTo(double value) {
        this.validTo = value;
    }

    
    // ------------------------------------------------------------------------
    // --- From here customized code ------------------------------------------ 
    // ------------------------------------------------------------------------        
    /**
	 * Returns a copy of the current instance.
	 * @return the copy
	 */
	public LinearCoefficient getCopy() {
		return createLinearCoefficient(this.getVariableID(), this.getValue(), this.getValidFrom(), this.getValidTo());
	}
    /**
     * Creates a LinearCoefficient.
     *
     * @param variableID the variable ID
     * @param value the value
     * @param validFrom the valid from
     * @param validTo the valid to
     * @return the linear coefficient
     */
    public static LinearCoefficient createLinearCoefficient(String variableID, Double value, Double validFrom, Double validTo) {
    	
    	if (variableID==null || variableID.isBlank()==true) {
    		throw new NullPointerException("The variableID for a LinearCoefficient is not allowed to be null or empty!");
    	}
    	
    	LinearCoefficient lc = new LinearCoefficient();
    	lc.setVariableID(variableID);
    	lc.setValue(value!=null ? value : 1.0);
    	lc.setValidFrom(validFrom!=null ? validFrom : Double.MIN_VALUE);
    	lc.setValidTo(validTo!=null ? validTo : Double.MAX_VALUE);
    	return lc;
    }
    
}
