//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.04.01 at 12:38:15 AM MESZ 
//


package gasmas.transfer.zib.cs;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 *  Definition of the gas driven motor type. It contains a sequence of
 * 				coefficients describing the maximal shaft power resulting from a quadratic
 * 				least-squares fit. A quadratic least-squares fit has the form: f(x) = [1 x x*x] *
 * 				[b1 b2 b3]^T. Three dimensionless coefficients for the maximal shaft power resulting
 * 				from a quadratic fit: f(x) = y with x = revolutions per minute, y = maximal shaft
 * 				power in kW 
 * 
 * <p>Java class for gasDrivenMotorType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="gasDrivenMotorType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://ifam.uni-hannover.de/ao/nopt/compressorStation}driveType">
 *       &lt;sequence>
 *         &lt;element name="power_fun_coeff_1" type="{http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema}noType"/>
 *         &lt;element name="power_fun_coeff_2" type="{http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema}noType"/>
 *         &lt;element name="power_fun_coeff_3" type="{http://mathematik.tu-darmstadt.de/opt/framework/XMLSchema}noType"/>
 *         &lt;element name="specificEnergyConsumptionMeasurements" type="{http://ifam.uni-hannover.de/ao/nopt/compressorStation}SEC_MeasurementsType" minOccurs="0"/>
 *         &lt;element name="maximalPowerMeasurements" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="measurement" type="{http://ifam.uni-hannover.de/ao/nopt/compressorStation}mp_measurementType" maxOccurs="unbounded" minOccurs="3"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "gasDrivenMotorType", namespace = "http://ifam.uni-hannover.de/ao/nopt/compressorStation", propOrder = {
    "powerFunCoeff1",
    "powerFunCoeff2",
    "powerFunCoeff3",
    "specificEnergyConsumptionMeasurements",
    "maximalPowerMeasurements"
})
public class GasDrivenMotorType
    extends DriveType
{

    @XmlElement(name = "power_fun_coeff_1", required = true)
    protected NoType powerFunCoeff1;
    @XmlElement(name = "power_fun_coeff_2", required = true)
    protected NoType powerFunCoeff2;
    @XmlElement(name = "power_fun_coeff_3", required = true)
    protected NoType powerFunCoeff3;
    protected SECMeasurementsType specificEnergyConsumptionMeasurements;
    protected GasDrivenMotorType.MaximalPowerMeasurements maximalPowerMeasurements;

    /**
     * Gets the value of the powerFunCoeff1 property.
     * 
     * @return
     *     possible object is
     *     {@link NoType }
     *     
     */
    public NoType getPowerFunCoeff1() {
        return powerFunCoeff1;
    }

    /**
     * Sets the value of the powerFunCoeff1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoType }
     *     
     */
    public void setPowerFunCoeff1(NoType value) {
        this.powerFunCoeff1 = value;
    }

    /**
     * Gets the value of the powerFunCoeff2 property.
     * 
     * @return
     *     possible object is
     *     {@link NoType }
     *     
     */
    public NoType getPowerFunCoeff2() {
        return powerFunCoeff2;
    }

    /**
     * Sets the value of the powerFunCoeff2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoType }
     *     
     */
    public void setPowerFunCoeff2(NoType value) {
        this.powerFunCoeff2 = value;
    }

    /**
     * Gets the value of the powerFunCoeff3 property.
     * 
     * @return
     *     possible object is
     *     {@link NoType }
     *     
     */
    public NoType getPowerFunCoeff3() {
        return powerFunCoeff3;
    }

    /**
     * Sets the value of the powerFunCoeff3 property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoType }
     *     
     */
    public void setPowerFunCoeff3(NoType value) {
        this.powerFunCoeff3 = value;
    }

    /**
     * Gets the value of the specificEnergyConsumptionMeasurements property.
     * 
     * @return
     *     possible object is
     *     {@link SECMeasurementsType }
     *     
     */
    public SECMeasurementsType getSpecificEnergyConsumptionMeasurements() {
        return specificEnergyConsumptionMeasurements;
    }

    /**
     * Sets the value of the specificEnergyConsumptionMeasurements property.
     * 
     * @param value
     *     allowed object is
     *     {@link SECMeasurementsType }
     *     
     */
    public void setSpecificEnergyConsumptionMeasurements(SECMeasurementsType value) {
        this.specificEnergyConsumptionMeasurements = value;
    }

    /**
     * Gets the value of the maximalPowerMeasurements property.
     * 
     * @return
     *     possible object is
     *     {@link GasDrivenMotorType.MaximalPowerMeasurements }
     *     
     */
    public GasDrivenMotorType.MaximalPowerMeasurements getMaximalPowerMeasurements() {
        return maximalPowerMeasurements;
    }

    /**
     * Sets the value of the maximalPowerMeasurements property.
     * 
     * @param value
     *     allowed object is
     *     {@link GasDrivenMotorType.MaximalPowerMeasurements }
     *     
     */
    public void setMaximalPowerMeasurements(GasDrivenMotorType.MaximalPowerMeasurements value) {
        this.maximalPowerMeasurements = value;
    }


    /**
     *  A list of measurements 
     * 
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="measurement" type="{http://ifam.uni-hannover.de/ao/nopt/compressorStation}mp_measurementType" maxOccurs="unbounded" minOccurs="3"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "measurement"
    })
    public static class MaximalPowerMeasurements {

        @XmlElement(namespace = "http://ifam.uni-hannover.de/ao/nopt/compressorStation", required = true)
        protected List<MpMeasurementType> measurement;

        /**
         * Gets the value of the measurement property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the measurement property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getMeasurement().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link MpMeasurementType }
         * 
         * 
         */
        public List<MpMeasurementType> getMeasurement() {
            if (measurement == null) {
                measurement = new ArrayList<MpMeasurementType>();
            }
            return this.measurement;
        }

    }

}
